let patternCount (text : string) (pattern : string) : int =
    seq { 0 .. (text.Length - pattern.Length) }
    |> Seq.sumBy (fun i ->
        if text.Substring(i, pattern.Length) = pattern
        then 1
        else 0)

patternCount "CTCAGTTCTCAGTTTACTACTCAGTTCTCAGTTTCGCTCAGTTCTCAGTTGGGTGCTCAGTTCTCAGTTATCTCAGTTCCTCAGTTCTCAGTTCAGACTCAGTTTCTCAGTTCTCAGTTGACTCAGTTGGACTCAGTTCTCAGTTTTTACTCAGTTCACTCAGTTATCTCAGTTTCGTGATTTCTCAGTTCCGCTCAGTTCGACTCAGTTCCTCAGTTTGCTCAGTTATCTCAGTTCTCAGTTTTATTTTCCACTCAGTTCGTCTCAGTTGCTCAGTTTGCTCAGTTGCCTCAGTTTCCTCAGTTCTCAGTTCAGCTCAGTTGTAATACTCAGTTACTGGATGCTCAGTTGACTCAGTTCTCAGTTTGTCGCCTCAGTTACTCAGTTAACTCAGTTTAGCCGGCTCAGTTCTCAGTTCTCAGTTAATACTCAGTTCGCTCAGTTCTCAGTTTGTGCTCAGTTTTTAGACTCAGTTACTCAGTTCTCAGTTGGCTCAGTTACTAGGCTCAGTTTCTCAGTTCTCAGTTCCTCAGTTGCTCAGTTCTCAGTTTCTCAGTTCTCTCAGTTGATTCTCAGTTATAATGCATCTCAGTTCGACTCAGTTTGGCTCAGTTCTCAGTTCCCGTCTACTCTCAGTTCGACCTCAGTTCTCAGTTTCTCAGTTGGTTGCCAACGGTCATCTCAGTTCCTCAGTTCCTCAGTTGGTCTCAGTTTGCTAGCTCAGTTATATCTCAGTTTGTCTCAGTTCTCAGTTGTACTCAGTTTCTCTCAGTTCTCAGTTATGGCTCAGTTCTCAGTTATACTCTCAGTTCTCAGTTAAGCACTCAGTTCGTACAGCTGCCGCTCAGTTCACTCAGTTACTCAGTTCTCAGTTGGGTTAACAACGCTCAGTTCTCAGTTTTCTCAGTTCCACTCAGTTTCGAGGGCTCAGTTGACTCAGTTCTCTCAGTTGAATTACTCAGTTACTAACCTCTCAGTTCTCTCAGTTGGCAAAGGGAGCTCAGTT" "CTCAGTTCT"

